//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CleanCode.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Settings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Settings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CleanCode.Resources.Settings", typeof(Settings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Methods Per Class.
        /// </summary>
        public static string ClassTooBig {
            get {
                return ResourceManager.GetString("ClassTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Methods Per Class Check.
        /// </summary>
        public static string ClassTooBigCheck {
            get {
                return ResourceManager.GetString("ClassTooBigCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum level of nesting.
        /// </summary>
        public static string ExcessiveDepth {
            get {
                return ResourceManager.GetString("ExcessiveDepth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excessive Depth Of Nesting Check.
        /// </summary>
        public static string ExcessiveDepthCheck {
            get {
                return ResourceManager.GetString("ExcessiveDepthCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Chained References.
        /// </summary>
        public static string MaxChainedReferences {
            get {
                return ResourceManager.GetString("MaxChainedReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Chained References Check.
        /// </summary>
        public static string MaxChainedReferencesCheck {
            get {
                return ResourceManager.GetString("MaxChainedReferencesCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Dependencies Check.
        /// </summary>
        public static string MaximumDependenciesCheck {
            get {
                return ResourceManager.GetString("MaximumDependenciesCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Method Arguments Check.
        /// </summary>
        public static string MaximumMethodArgumentsCheck {
            get {
                return ResourceManager.GetString("MaximumMethodArgumentsCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Statements Per Method Check.
        /// </summary>
        public static string MethodTooLongCheck {
            get {
                return ResourceManager.GetString("MethodTooLongCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum lenght for the name of methods.
        /// </summary>
        public static string MinimumMethodNameLength {
            get {
                return ResourceManager.GetString("MinimumMethodNameLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Method Name Lenght.
        /// </summary>
        public static string MinimumMethodNameLengthCheck {
            get {
                return ResourceManager.GetString("MinimumMethodNameLengthCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The options below help enforce certain practices that can be considered to leading to cleaner and more maintainable code..
        /// </summary>
        public static string Options_Header {
            get {
                return ResourceManager.GetString("Options_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: All references to Clean Code, including but not limited to the Clean Code icon are used with permission of Robert C. Martin (a.k.a. UncleBob).
        /// </summary>
        public static string Options_SubHeader {
            get {
                return ResourceManager.GetString("Options_SubHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum statements per method.
        /// </summary>
        public static string TooLongLinesPerMethod {
            get {
                return ResourceManager.GetString("TooLongLinesPerMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set maximum dependencies to.
        /// </summary>
        public static string TooManyDependencies {
            get {
                return ResourceManager.GetString("TooManyDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set maximum arguments to.
        /// </summary>
        public static string TooManyMethodArguments {
            get {
                return ResourceManager.GetString("TooManyMethodArguments", resourceCulture);
            }
        }
    }
}
